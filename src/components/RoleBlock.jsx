import React from 'react';
import DiceIcon from './DiceIcon';
import { getNextRank, getPreviousRank } from '../utils/diceLogic';

const RoleBlock = ({ roles, onRoleClick, onRoleChange, isCategoryAvailable, additionalDieEffect = false }) => {
  const handleIncrease = (roleName, currentRank) => {
    const newRank = getNextRank(currentRank);
    if (newRank !== currentRank && onRoleChange) {
      onRoleChange(roleName, newRank);
    }
  };

  const handleDecrease = (roleName, currentRank) => {
    const newRank = getPreviousRank(currentRank);
    if (newRank !== currentRank && onRoleChange) {
      onRoleChange(roleName, newRank);
    }
  };

  const handleRoleClick = (roleName, diceType) => {
    if (isCategoryAvailable && !isCategoryAvailable('role') && !additionalDieEffect) {
      return;
    }
    onRoleClick(roleName, diceType);
  };

  const isBlockAvailable = isCategoryAvailable ? isCategoryAvailable('role') : true;
  const finalAvailability = isBlockAvailable || additionalDieEffect;

  return (
    <div className={`block roles-block ${!finalAvailability ? 'category-used' : ''} ${additionalDieEffect ? 'bonus-mode' : ''}`}>
      <h3>–†–æ–ª–∏</h3>
      <div className="roles-list">
        {Object.entries(roles).map(([name, diceType]) => (
          <div 
            key={name} 
            className={`role-row ${!finalAvailability ? 'row-disabled' : ''}`}
            onClick={() => handleRoleClick(name, diceType)}
            title={
              !finalAvailability 
                ? '–£–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–æ–ª—å –∏–∑ —ç—Ç–æ–≥–æ –Ω–∞–±–æ—Ä–∞' 
                : additionalDieEffect
                ? '–≠—Ñ—Ñ–µ–∫—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫—É–±–∞: –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –ø—É–ª'
                : '–ö–ª–∏–∫ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∫—É–± –≤ –ø—É–ª'
            }
          >
            <span className="role-name">{name}</span>
            
            <div className="role-controls">
              <DiceIcon 
                type={diceType} 
                value={diceType.replace('d', '')}
                clickable={finalAvailability}
              />
              
              <div className="rank-buttons-vertical">
                <button
                  className="rank-button increase-button"
                  onClick={(e) => {
                    e.stopPropagation();
                    handleIncrease(name, diceType);
                  }}
                  disabled={diceType === 'd12' || !finalAvailability}
                  title="–ü–æ–≤—ã—Å–∏—Ç—å —Ä–∞–Ω–≥"
                >
                  ‚ñ≤
                </button>
                
                <button
                  className="rank-button decrease-button"
                  onClick={(e) => {
                    e.stopPropagation();
                    handleDecrease(name, diceType);
                  }}
                  disabled={diceType === 'd4' || !finalAvailability}
                  title="–ü–æ–Ω–∏–∑–∏—Ç—å —Ä–∞–Ω–≥"
                >
                  ‚ñº
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>
      <div className="role-hint">
        {additionalDieEffect 
          ? 'üéØ –≠—Ñ—Ñ–µ–∫—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫—É–±–∞: –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª—é–±—É—é —Ä–æ–ª—å' 
          : !isBlockAvailable 
            ? '‚ö° –†–æ–ª—å —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –ø—É–ª–µ' 
            : 'üí° –ö–ª–∏–∫–∞–π—Ç–µ –ø–æ —Ä–æ–ª—è–º —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∫—É–±—ã –≤ –ø—É–ª'
        }
      </div>
    </div>
  );
};

export default RoleBlock;