import React, { useRef } from 'react';

const CharacterHeader = ({
  characterInfo,
  onCharacterInfoChange,
  onExportCharacter,
  onImportCharacter,
  onResetCharacter
}) => {
  const fileInputRef = useRef(null);

  const handleChange = (field, value) => {
    onCharacterInfoChange(field, value);
  };

  const handleExportClick = () => {
    onExportCharacter();
  };

  const handleImportClick = () => {
    fileInputRef.current?.click();
  };

  const handleResetClick = () => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∫ –Ω–∞—á–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º? –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã.')) {
      onResetCharacter();
    }
  };

  const handleFileSelect = (event) => {
    const file = event.target.files[0];
    if (file) {
      onImportCharacter(file);
    }
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ input —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ—Ç –∂–µ —Ñ–∞–π–ª —Å–Ω–æ–≤–∞
    event.target.value = '';
  };

  return (
    <div className="character-header-block">
      {/* –°–∫—Ä—ã—Ç—ã–π input –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ */}
      <input
        type="file"
        ref={fileInputRef}
        onChange={handleFileSelect}
        accept=".json"
        style={{ display: 'none' }}
      />

      <div className="character-header-top">

        <div className="character-actions">
          <button
            className="export-button"
            onClick={handleExportClick}
            title="–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–∏—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"
          >
            üíæ –≠–∫—Å–ø–æ—Ä—Ç
          </button>
          <button
            className="import-button"
            onClick={handleImportClick}
            title="–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–∏—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"
          >
            üìÇ –ò–º–ø–æ—Ä—Ç
          </button>
          <button
            className="reset-button"
            onClick={handleResetClick}
            title="–°–±—Ä–æ—Å–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∫ –Ω–∞—á–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º"
          >
            üîÑ –°–±—Ä–æ—Å
          </button>
        </div>
      </div>

      <div className="character-details-grid">

        {/* <div className="character-name-section"> */}
        <div className="detail-item">
          <label className="detail-label">–ò–º—è</label>
          <input
            type="text"
            // className="character-name-input"
            className="detail-input"
            value={characterInfo.name}
            onChange={(e) => handleChange('name', e.target.value)}
            placeholder="–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"
            maxLength={50}
          />
        </div>

        <div className="detail-item">
          <label className="detail-label">–í–æ–∑—Ä–∞—Å—Ç</label>
          <input
            type="text"
            className="detail-input"
            value={characterInfo.age}
            onChange={(e) => handleChange('age', e.target.value)}
            placeholder="–í–æ–∑—Ä–∞—Å—Ç"
            maxLength={15}
          />
        </div>
      </div>

      {/* <div className="character-description-section">
        <label className="description-label">–û–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</label>
        <textarea
          className="character-description"
          value={characterInfo.description}
          onChange={(e) => handleChange('description', e.target.value)}
          placeholder="–û–ø–∏—à–∏—Ç–µ –≤–Ω–µ—à–Ω–æ—Å—Ç—å, —Ö–∞—Ä–∞–∫—Ç–µ—Ä, –∏—Å—Ç–æ—Ä–∏—é –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞..."
          maxLength={500}
          rows={3}
        />
        <div className="description-counter">
          {characterInfo.description.length}/500 —Å–∏–º–≤–æ–ª–æ–≤
        </div>
      </div> */}
    </div>
  );
};

export default CharacterHeader;